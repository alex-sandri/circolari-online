rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /circolari/{circolareId} {
      allow read: if existingData().metadata.owner == request.auth.uid;

      allow create: if incomingData().metadata.owner == request.auth.uid;

      allow update: if incomingData().metadata.owner == request.auth.uid
        && incomingData().diff(existingData()).affectedKeys().hasOnly([ "settings" ]);

      allow delete: if false;

      match /answers/{answerId} {
        allow read: if get(/databases/$(database)/documents/circolari/$(circolareId)).data.metadata.owner == request.auth.uid;

        allow create: if incomingData().fields.size() > 0
          && incomingData().metadata.sent == request.time
          && allowNewAnswers();

        allow update: if incomingData().fields.diff(existingData().fields).affectedKeys().size() == 0
          && incomingData().metadata.sent == existingData().metadata.sent
          && incomingData().metadata.handled == true;

        allow delete: if false;

        function allowNewAnswers() {
          let circolare = get(/databases/$(database)/documents/circolari/$(circolareId)).data;

          return circolare.settings.allowNewAnswers == true
            || !("settings" in circolare)
            || !("allowNewAnswers" in circolare.settings);
        }
      }
    }
  }

  function existingData() {
    return resource.data;
  }

  function incomingData() {
    return request.resource.data;
  }
}